/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.BranchRestrictionPolicyUsersInner
import org.openapitools.client.models.WebhookDiscussionCreatedDiscussionAllOfCategory
import org.openapitools.client.models.WebhookDiscussionCreatedDiscussionAllOfReactions

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param activeLockReason 
 * @param answerChosenAt 
 * @param answerChosenBy 
 * @param answerHtmlUrl 
 * @param authorAssociation 
 * @param body 
 * @param category 
 * @param comments 
 * @param createdAt 
 * @param htmlUrl 
 * @param id 
 * @param locked 
 * @param nodeId 
 * @param number 
 * @param repositoryUrl 
 * @param state 
 * @param title 
 * @param updatedAt 
 * @param user 
 * @param reactions 
 * @param timelineUrl 
 */
@Serializable

data class WebhookDiscussionCreatedDiscussion (

    @Contextual @SerialName(value = "active_lock_reason")
    val activeLockReason: kotlin.Any?,

    @Contextual @SerialName(value = "answer_chosen_at")
    val answerChosenAt: kotlin.Any?,

    @Contextual @SerialName(value = "answer_chosen_by")
    val answerChosenBy: kotlin.Any?,

    @SerialName(value = "answer_html_url")
    val answerHtmlUrl: kotlin.String?,

    @SerialName(value = "author_association")
    val authorAssociation: kotlin.String,

    @SerialName(value = "body")
    val body: kotlin.String?,

    @SerialName(value = "category")
    val category: WebhookDiscussionCreatedDiscussionAllOfCategory,

    @SerialName(value = "comments")
    val comments: kotlin.Int,

    @SerialName(value = "created_at")
    val createdAt: kotlin.String,

    @SerialName(value = "html_url")
    val htmlUrl: kotlin.String,

    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "locked")
    val locked: WebhookDiscussionCreatedDiscussion.Locked,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    @SerialName(value = "number")
    val number: kotlin.Int,

    @SerialName(value = "repository_url")
    val repositoryUrl: kotlin.String,

    @SerialName(value = "state")
    val state: WebhookDiscussionCreatedDiscussion.State,

    @SerialName(value = "title")
    val title: kotlin.String,

    @SerialName(value = "updated_at")
    val updatedAt: kotlin.String,

    @SerialName(value = "user")
    val user: BranchRestrictionPolicyUsersInner,

    @SerialName(value = "reactions")
    val reactions: WebhookDiscussionCreatedDiscussionAllOfReactions? = null,

    @SerialName(value = "timeline_url")
    val timelineUrl: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: `false`
     */
    @Serializable
    enum class Locked(val value: kotlin.Boolean) {
        @SerialName(value = "false") `false`(false);
    }
    /**
     * 
     *
     * Values: `open`,converting,transferring
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "open") `open`("open"),
        @SerialName(value = "converting") converting("converting"),
        @SerialName(value = "transferring") transferring("transferring");
    }
}

