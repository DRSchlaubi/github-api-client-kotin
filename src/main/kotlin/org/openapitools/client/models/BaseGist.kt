/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.BaseGistFilesValue
import org.openapitools.client.models.IntegrationOwner
import org.openapitools.client.models.SimpleUser

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Base Gist
 *
 * @param url 
 * @param forksUrl 
 * @param commitsUrl 
 * @param id 
 * @param nodeId 
 * @param gitPullUrl 
 * @param gitPushUrl 
 * @param htmlUrl 
 * @param files 
 * @param `public` 
 * @param createdAt 
 * @param updatedAt 
 * @param description 
 * @param comments 
 * @param user 
 * @param commentsUrl 
 * @param owner 
 * @param truncated 
 * @param forks 
 * @param history 
 */
@Serializable

data class BaseGist (

    @Contextual @SerialName(value = "url")
    val url: java.net.URI,

    @Contextual @SerialName(value = "forks_url")
    val forksUrl: java.net.URI,

    @Contextual @SerialName(value = "commits_url")
    val commitsUrl: java.net.URI,

    @SerialName(value = "id")
    val id: kotlin.String,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    @Contextual @SerialName(value = "git_pull_url")
    val gitPullUrl: java.net.URI,

    @Contextual @SerialName(value = "git_push_url")
    val gitPushUrl: java.net.URI,

    @Contextual @SerialName(value = "html_url")
    val htmlUrl: java.net.URI,

    @Contextual @SerialName(value = "files")
    val files: kotlin.Any,

    @SerialName(value = "public")
    val `public`: kotlin.Boolean,

    @Contextual @SerialName(value = "created_at")
    val createdAt: kotlinx.datetime.Instant,

    @Contextual @SerialName(value = "updated_at")
    val updatedAt: kotlinx.datetime.Instant,

    @SerialName(value = "description")
    val description: kotlin.String?,

    @SerialName(value = "comments")
    val comments: kotlin.Int,

    @SerialName(value = "user")
    val user: IntegrationOwner,

    @Contextual @SerialName(value = "comments_url")
    val commentsUrl: java.net.URI,

    @SerialName(value = "owner")
    val owner: SimpleUser? = null,

    @SerialName(value = "truncated")
    val truncated: kotlin.Boolean? = null,

    @SerialName(value = "forks")
    val forks: kotlin.collections.List<@Contextual kotlin.Any>? = null,

    @Contextual @SerialName(value = "history")
    val history: kotlin.Any? = null

)

