/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param title The title of the pull request.
 * @param body The contents of the pull request.
 * @param state State of this Pull Request. Either `open` or `closed`.
 * @param base The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.
 * @param maintainerCanModify Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
 */
@Serializable

data class PullsUpdateRequest (

    /* The title of the pull request. */
    @SerialName(value = "title")
    val title: kotlin.String? = null,

    /* The contents of the pull request. */
    @SerialName(value = "body")
    val body: kotlin.String? = null,

    /* State of this Pull Request. Either `open` or `closed`. */
    @SerialName(value = "state")
    val state: PullsUpdateRequest.State? = null,

    /* The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository. */
    @SerialName(value = "base")
    val base: kotlin.String? = null,

    /* Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request. */
    @SerialName(value = "maintainer_can_modify")
    val maintainerCanModify: kotlin.Boolean? = null

) {

    /**
     * State of this Pull Request. Either `open` or `closed`.
     *
     * Values: `open`,closed
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "open") `open`("open"),
        @SerialName(value = "closed") closed("closed");
    }
}

