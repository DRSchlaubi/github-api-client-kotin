/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param repositories A list of arrays indicating which repositories should be migrated.
 * @param lockRepositories Indicates whether repositories should be locked (to prevent manipulation) while migrating data.
 * @param excludeMetadata Indicates whether metadata should be excluded and only git source should be included for the migration.
 * @param excludeGitData Indicates whether the repository git data should be excluded from the migration.
 * @param excludeAttachments Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).
 * @param excludeReleases Indicates whether releases should be excluded from the migration (to reduce migration archive file size).
 * @param excludeOwnerProjects Indicates whether projects owned by the organization or users should be excluded. from the migration.
 * @param orgMetadataOnly Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
 * @param exclude Exclude related items from being returned in the response in order to improve performance of the request.
 */
@Serializable

data class MigrationsStartForOrgRequest (

    /* A list of arrays indicating which repositories should be migrated. */
    @SerialName(value = "repositories")
    val repositories: kotlin.collections.List<kotlin.String>,

    /* Indicates whether repositories should be locked (to prevent manipulation) while migrating data. */
    @SerialName(value = "lock_repositories")
    val lockRepositories: kotlin.Boolean? = false,

    /* Indicates whether metadata should be excluded and only git source should be included for the migration. */
    @SerialName(value = "exclude_metadata")
    val excludeMetadata: kotlin.Boolean? = false,

    /* Indicates whether the repository git data should be excluded from the migration. */
    @SerialName(value = "exclude_git_data")
    val excludeGitData: kotlin.Boolean? = false,

    /* Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). */
    @SerialName(value = "exclude_attachments")
    val excludeAttachments: kotlin.Boolean? = false,

    /* Indicates whether releases should be excluded from the migration (to reduce migration archive file size). */
    @SerialName(value = "exclude_releases")
    val excludeReleases: kotlin.Boolean? = false,

    /* Indicates whether projects owned by the organization or users should be excluded. from the migration. */
    @SerialName(value = "exclude_owner_projects")
    val excludeOwnerProjects: kotlin.Boolean? = false,

    /* Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags). */
    @SerialName(value = "org_metadata_only")
    val orgMetadataOnly: kotlin.Boolean? = false,

    /* Exclude related items from being returned in the response in order to improve performance of the request. */
    @SerialName(value = "exclude")
    val exclude: kotlin.collections.List<MigrationsStartForOrgRequest.Exclude>? = null

) {

    /**
     * Exclude related items from being returned in the response in order to improve performance of the request.
     *
     * Values: repositories
     */
    @Serializable
    enum class Exclude(val value: kotlin.String) {
        @SerialName(value = "repositories") repositories("repositories");
    }
}

