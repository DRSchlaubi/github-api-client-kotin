/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CodespaceMachine

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param name The name of the machine.
 * @param displayName The display name of the machine includes cores, memory, and storage.
 * @param operatingSystem The operating system of the machine.
 * @param storageInBytes How much storage is available to the codespace.
 * @param memoryInBytes How much memory is available to the codespace.
 * @param cpus How many cores are available to the codespace.
 * @param prebuildAvailability Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.
 */
@Serializable

data class CodespaceMachine (

    /* The name of the machine. */
    @Contextual @SerialName(value = "name")
    val name: kotlin.Any?,

    /* The display name of the machine includes cores, memory, and storage. */
    @Contextual @SerialName(value = "display_name")
    val displayName: kotlin.Any?,

    /* The operating system of the machine. */
    @Contextual @SerialName(value = "operating_system")
    val operatingSystem: kotlin.Any?,

    /* How much storage is available to the codespace. */
    @Contextual @SerialName(value = "storage_in_bytes")
    val storageInBytes: kotlin.Any?,

    /* How much memory is available to the codespace. */
    @Contextual @SerialName(value = "memory_in_bytes")
    val memoryInBytes: kotlin.Any?,

    /* How many cores are available to the codespace. */
    @Contextual @SerialName(value = "cpus")
    val cpus: kotlin.Any?,

    /* Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status. */
    @SerialName(value = "prebuild_availability")
    val prebuildAvailability: CodespaceMachine.PrebuildAvailability?

) {

    /**
     * Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.
     *
     * Values: none,ready,in_progress,`null`
     */
    @Serializable
    enum class PrebuildAvailability(val value: kotlin.Any) {
        @SerialName(value = "none") none("none"),
        @SerialName(value = "ready") ready("ready"),
        @SerialName(value = "in_progress") in_progress("in_progress"),
        @SerialName(value = "null") `null`("null");
    }
}

