/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.User

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param affectedPackageName 
 * @param affectedRange 
 * @param createdAt 
 * @param externalIdentifier 
 * @param externalReference 
 * @param ghsaId 
 * @param id 
 * @param nodeId 
 * @param number 
 * @param severity 
 * @param state 
 * @param dismissReason 
 * @param dismissedAt 
 * @param dismisser 
 * @param fixReason 
 * @param fixedAt 
 * @param fixedIn 
 */
@Serializable

data class WebhookRepositoryVulnerabilityAlertResolveAlert (

    @SerialName(value = "affected_package_name")
    val affectedPackageName: kotlin.String,

    @SerialName(value = "affected_range")
    val affectedRange: kotlin.String,

    @SerialName(value = "created_at")
    val createdAt: kotlin.String,

    @SerialName(value = "external_identifier")
    val externalIdentifier: kotlin.String,

    @SerialName(value = "external_reference")
    val externalReference: kotlin.String?,

    @SerialName(value = "ghsa_id")
    val ghsaId: kotlin.String,

    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    @SerialName(value = "number")
    val number: kotlin.Int,

    @SerialName(value = "severity")
    val severity: kotlin.String,

    @SerialName(value = "state")
    val state: WebhookRepositoryVulnerabilityAlertResolveAlert.State,

    @SerialName(value = "dismiss_reason")
    val dismissReason: kotlin.String? = null,

    @SerialName(value = "dismissed_at")
    val dismissedAt: kotlin.String? = null,

    @SerialName(value = "dismisser")
    val dismisser: User? = null,

    @SerialName(value = "fix_reason")
    val fixReason: kotlin.String? = null,

    @Contextual @SerialName(value = "fixed_at")
    val fixedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "fixed_in")
    val fixedIn: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: fixed,`open`
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "fixed") fixed("fixed"),
        @SerialName(value = "open") `open`("open");
    }
}

