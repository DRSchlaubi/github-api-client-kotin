/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.PagesHttpsCertificate
import org.openapitools.client.models.PagesSourceHash

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * The configuration for GitHub Pages for a repository.
 *
 * @param url The API address for accessing this Page resource.
 * @param status The status of the most recent build of the Page.
 * @param cname The Pages site's custom domain
 * @param custom404 Whether the Page has a custom 404 page.
 * @param `public` Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
 * @param protectedDomainState The state if the domain is verified
 * @param pendingDomainUnverifiedAt The timestamp when a pending domain becomes unverified.
 * @param htmlUrl The web address the Page can be accessed from.
 * @param buildType The process in which the Page will be built.
 * @param source 
 * @param httpsCertificate 
 * @param httpsEnforced Whether https is enabled on the domain
 */
@Serializable

data class Page (

    /* The API address for accessing this Page resource. */
    @Contextual @SerialName(value = "url")
    val url: java.net.URI,

    /* The status of the most recent build of the Page. */
    @SerialName(value = "status")
    val status: Page.Status?,

    /* The Pages site's custom domain */
    @SerialName(value = "cname")
    val cname: kotlin.String?,

    /* Whether the Page has a custom 404 page. */
    @SerialName(value = "custom_404")
    val custom404: kotlin.Boolean = false,

    /* Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. */
    @SerialName(value = "public")
    val `public`: kotlin.Boolean,

    /* The state if the domain is verified */
    @SerialName(value = "protected_domain_state")
    val protectedDomainState: Page.ProtectedDomainState? = null,

    /* The timestamp when a pending domain becomes unverified. */
    @Contextual @SerialName(value = "pending_domain_unverified_at")
    val pendingDomainUnverifiedAt: kotlinx.datetime.Instant? = null,

    /* The web address the Page can be accessed from. */
    @Contextual @SerialName(value = "html_url")
    val htmlUrl: java.net.URI? = null,

    /* The process in which the Page will be built. */
    @SerialName(value = "build_type")
    val buildType: Page.BuildType? = null,

    @SerialName(value = "source")
    val source: PagesSourceHash? = null,

    @SerialName(value = "https_certificate")
    val httpsCertificate: PagesHttpsCertificate? = null,

    /* Whether https is enabled on the domain */
    @SerialName(value = "https_enforced")
    val httpsEnforced: kotlin.Boolean? = null

) {

    /**
     * The status of the most recent build of the Page.
     *
     * Values: built,building,errored,`null`
     */
    @Serializable
    enum class Status(val value: kotlin.String) {
        @SerialName(value = "built") built("built"),
        @SerialName(value = "building") building("building"),
        @SerialName(value = "errored") errored("errored"),
        @SerialName(value = "null") `null`("null");
    }
    /**
     * The state if the domain is verified
     *
     * Values: pending,verified,unverified,`null`
     */
    @Serializable
    enum class ProtectedDomainState(val value: kotlin.String) {
        @SerialName(value = "pending") pending("pending"),
        @SerialName(value = "verified") verified("verified"),
        @SerialName(value = "unverified") unverified("unverified"),
        @SerialName(value = "null") `null`("null");
    }
    /**
     * The process in which the Page will be built.
     *
     * Values: legacy,workflow,`null`
     */
    @Serializable
    enum class BuildType(val value: kotlin.String) {
        @SerialName(value = "legacy") legacy("legacy"),
        @SerialName(value = "workflow") workflow("workflow"),
        @SerialName(value = "null") `null`("null");
    }
}

