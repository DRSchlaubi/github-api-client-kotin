/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param UBUNTU Total minutes used on Ubuntu runner machines.
 * @param MACOS Total minutes used on macOS runner machines.
 * @param WINDOWS Total minutes used on Windows runner machines.
 * @param ubuntu4Core Total minutes used on Ubuntu 4 core runner machines.
 * @param ubuntu8Core Total minutes used on Ubuntu 8 core runner machines.
 * @param ubuntu16Core Total minutes used on Ubuntu 16 core runner machines.
 * @param ubuntu32Core Total minutes used on Ubuntu 32 core runner machines.
 * @param ubuntu64Core Total minutes used on Ubuntu 64 core runner machines.
 * @param windows4Core Total minutes used on Windows 4 core runner machines.
 * @param windows8Core Total minutes used on Windows 8 core runner machines.
 * @param windows16Core Total minutes used on Windows 16 core runner machines.
 * @param windows32Core Total minutes used on Windows 32 core runner machines.
 * @param windows64Core Total minutes used on Windows 64 core runner machines.
 * @param macos12Core Total minutes used on macOS 12 core runner machines.
 * @param total Total minutes used on all runner machines.
 */
@Serializable

data class ActionsBillingUsageMinutesUsedBreakdown (

    /* Total minutes used on Ubuntu runner machines. */
    @SerialName(value = "UBUNTU")
    val UBUNTU: kotlin.Int? = null,

    /* Total minutes used on macOS runner machines. */
    @SerialName(value = "MACOS")
    val MACOS: kotlin.Int? = null,

    /* Total minutes used on Windows runner machines. */
    @SerialName(value = "WINDOWS")
    val WINDOWS: kotlin.Int? = null,

    /* Total minutes used on Ubuntu 4 core runner machines. */
    @SerialName(value = "ubuntu_4_core")
    val ubuntu4Core: kotlin.Int? = null,

    /* Total minutes used on Ubuntu 8 core runner machines. */
    @SerialName(value = "ubuntu_8_core")
    val ubuntu8Core: kotlin.Int? = null,

    /* Total minutes used on Ubuntu 16 core runner machines. */
    @SerialName(value = "ubuntu_16_core")
    val ubuntu16Core: kotlin.Int? = null,

    /* Total minutes used on Ubuntu 32 core runner machines. */
    @SerialName(value = "ubuntu_32_core")
    val ubuntu32Core: kotlin.Int? = null,

    /* Total minutes used on Ubuntu 64 core runner machines. */
    @SerialName(value = "ubuntu_64_core")
    val ubuntu64Core: kotlin.Int? = null,

    /* Total minutes used on Windows 4 core runner machines. */
    @SerialName(value = "windows_4_core")
    val windows4Core: kotlin.Int? = null,

    /* Total minutes used on Windows 8 core runner machines. */
    @SerialName(value = "windows_8_core")
    val windows8Core: kotlin.Int? = null,

    /* Total minutes used on Windows 16 core runner machines. */
    @SerialName(value = "windows_16_core")
    val windows16Core: kotlin.Int? = null,

    /* Total minutes used on Windows 32 core runner machines. */
    @SerialName(value = "windows_32_core")
    val windows32Core: kotlin.Int? = null,

    /* Total minutes used on Windows 64 core runner machines. */
    @SerialName(value = "windows_64_core")
    val windows64Core: kotlin.Int? = null,

    /* Total minutes used on macOS 12 core runner machines. */
    @SerialName(value = "macos_12_core")
    val macos12Core: kotlin.Int? = null,

    /* Total minutes used on all runner machines. */
    @SerialName(value = "total")
    val total: kotlin.Int? = null

)

