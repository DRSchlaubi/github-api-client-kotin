/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ChecksCreateRequestOneOf
import org.openapitools.client.models.ChecksCreateRequestOneOf1
import org.openapitools.client.models.ChecksCreateRequestOutput

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param status 
 */
@Serializable

data class ChecksCreateRequest (

    @SerialName(value = "status")
    val status: ChecksCreateRequest.Status?

) {

    /**
     * The current status of the check run. Only GitHub Actions can set a status of `waiting`, `pending`, or `requested`.
     *
     * Values: queued,in_progress,completed,waiting,requested,pending
     */
    @Serializable
    enum class Status(val value: kotlin.Any) {
        @SerialName(value = "queued") queued("queued"),
        @SerialName(value = "in_progress") in_progress("in_progress"),
        @SerialName(value = "completed") completed("completed"),
        @SerialName(value = "waiting") waiting("waiting"),
        @SerialName(value = "requested") requested("requested"),
        @SerialName(value = "pending") pending("pending");
    }
    /**
     * **Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check.  **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.
     *
     * Values: action_required,cancelled,failure,neutral,success,skipped,stale,timed_out
     */
    @Serializable
    enum class Conclusion(val value: kotlin.Any) {
        @SerialName(value = "action_required") action_required("action_required"),
        @SerialName(value = "cancelled") cancelled("cancelled"),
        @SerialName(value = "failure") failure("failure"),
        @SerialName(value = "neutral") neutral("neutral"),
        @SerialName(value = "success") success("success"),
        @SerialName(value = "skipped") skipped("skipped"),
        @SerialName(value = "stale") stale("stale"),
        @SerialName(value = "timed_out") timed_out("timed_out");
    }
}

