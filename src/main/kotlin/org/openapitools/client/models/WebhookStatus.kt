/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.EnterpriseWebhooks
import org.openapitools.client.models.OrganizationSimpleWebhooks
import org.openapitools.client.models.RepositoryWebhooks
import org.openapitools.client.models.SimpleInstallation
import org.openapitools.client.models.SimpleUserWebhooks
import org.openapitools.client.models.WebhookStatusBranchesInner
import org.openapitools.client.models.WebhookStatusCommit

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param branches An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches.
 * @param commit 
 * @param context 
 * @param createdAt 
 * @param description The optional human-readable description added to the status.
 * @param id The unique identifier of the status.
 * @param name 
 * @param repository 
 * @param sender 
 * @param sha The Commit SHA.
 * @param state The new state. Can be `pending`, `success`, `failure`, or `error`.
 * @param targetUrl The optional link added to the status.
 * @param updatedAt 
 * @param avatarUrl 
 * @param enterprise 
 * @param installation 
 * @param organization 
 */
@Serializable

data class WebhookStatus (

    /* An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches. */
    @SerialName(value = "branches")
    val branches: kotlin.collections.List<WebhookStatusBranchesInner>,

    @SerialName(value = "commit")
    val commit: WebhookStatusCommit,

    @SerialName(value = "context")
    val context: kotlin.String,

    @SerialName(value = "created_at")
    val createdAt: kotlin.String,

    /* The optional human-readable description added to the status. */
    @SerialName(value = "description")
    val description: kotlin.String?,

    /* The unique identifier of the status. */
    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "name")
    val name: kotlin.String,

    @SerialName(value = "repository")
    val repository: RepositoryWebhooks,

    @SerialName(value = "sender")
    val sender: SimpleUserWebhooks,

    /* The Commit SHA. */
    @SerialName(value = "sha")
    val sha: kotlin.String,

    /* The new state. Can be `pending`, `success`, `failure`, or `error`. */
    @SerialName(value = "state")
    val state: WebhookStatus.State,

    /* The optional link added to the status. */
    @SerialName(value = "target_url")
    val targetUrl: kotlin.String?,

    @SerialName(value = "updated_at")
    val updatedAt: kotlin.String,

    @Contextual @SerialName(value = "avatar_url")
    val avatarUrl: java.net.URI? = null,

    @SerialName(value = "enterprise")
    val enterprise: EnterpriseWebhooks? = null,

    @SerialName(value = "installation")
    val installation: SimpleInstallation? = null,

    @SerialName(value = "organization")
    val organization: OrganizationSimpleWebhooks? = null

) {

    /**
     * The new state. Can be `pending`, `success`, `failure`, or `error`.
     *
     * Values: pending,success,failure,error
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "pending") pending("pending"),
        @SerialName(value = "success") success("success"),
        @SerialName(value = "failure") failure("failure"),
        @SerialName(value = "error") error("error");
    }
}

