/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.BranchProtectionRequiredSignatures
import org.openapitools.client.models.BranchRestrictionPolicy
import org.openapitools.client.models.ProtectedBranchAllowForkSyncing
import org.openapitools.client.models.ProtectedBranchEnforceAdmins
import org.openapitools.client.models.ProtectedBranchLockBranch
import org.openapitools.client.models.ProtectedBranchRequiredConversationResolution
import org.openapitools.client.models.ProtectedBranchRequiredLinearHistory
import org.openapitools.client.models.ProtectedBranchRequiredPullRequestReviews
import org.openapitools.client.models.StatusCheckPolicy

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Branch protections protect branches
 *
 * @param url 
 * @param requiredStatusChecks 
 * @param requiredPullRequestReviews 
 * @param requiredSignatures 
 * @param enforceAdmins 
 * @param requiredLinearHistory 
 * @param allowForcePushes 
 * @param allowDeletions 
 * @param restrictions 
 * @param requiredConversationResolution 
 * @param blockCreations 
 * @param lockBranch 
 * @param allowForkSyncing 
 */
@Serializable

data class ProtectedBranch (

    @Contextual @SerialName(value = "url")
    val url: java.net.URI,

    @SerialName(value = "required_status_checks")
    val requiredStatusChecks: StatusCheckPolicy? = null,

    @SerialName(value = "required_pull_request_reviews")
    val requiredPullRequestReviews: ProtectedBranchRequiredPullRequestReviews? = null,

    @SerialName(value = "required_signatures")
    val requiredSignatures: BranchProtectionRequiredSignatures? = null,

    @SerialName(value = "enforce_admins")
    val enforceAdmins: ProtectedBranchEnforceAdmins? = null,

    @SerialName(value = "required_linear_history")
    val requiredLinearHistory: ProtectedBranchRequiredLinearHistory? = null,

    @SerialName(value = "allow_force_pushes")
    val allowForcePushes: ProtectedBranchRequiredLinearHistory? = null,

    @SerialName(value = "allow_deletions")
    val allowDeletions: ProtectedBranchRequiredLinearHistory? = null,

    @SerialName(value = "restrictions")
    val restrictions: BranchRestrictionPolicy? = null,

    @SerialName(value = "required_conversation_resolution")
    val requiredConversationResolution: ProtectedBranchRequiredConversationResolution? = null,

    @SerialName(value = "block_creations")
    val blockCreations: ProtectedBranchRequiredLinearHistory? = null,

    @SerialName(value = "lock_branch")
    val lockBranch: ProtectedBranchLockBranch? = null,

    @SerialName(value = "allow_fork_syncing")
    val allowForkSyncing: ProtectedBranchAllowForkSyncing? = null

)

