/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param head The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.
 * @param base The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.
 * @param title The title of the new pull request. Required unless `issue` is specified.
 * @param headRepo The name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization.
 * @param body The contents of the pull request.
 * @param maintainerCanModify Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
 * @param draft Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://docs.github.com/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.
 * @param issue An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless `title` is specified.
 */
@Serializable

data class PullsCreateRequest (

    /* The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`. */
    @SerialName(value = "head")
    val head: kotlin.String,

    /* The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository. */
    @SerialName(value = "base")
    val base: kotlin.String,

    /* The title of the new pull request. Required unless `issue` is specified. */
    @SerialName(value = "title")
    val title: kotlin.String? = null,

    /* The name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization. */
    @SerialName(value = "head_repo")
    val headRepo: kotlin.String? = null,

    /* The contents of the pull request. */
    @SerialName(value = "body")
    val body: kotlin.String? = null,

    /* Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request. */
    @SerialName(value = "maintainer_can_modify")
    val maintainerCanModify: kotlin.Boolean? = null,

    /* Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://docs.github.com/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more. */
    @SerialName(value = "draft")
    val draft: kotlin.Boolean? = null,

    /* An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless `title` is specified. */
    @SerialName(value = "issue")
    val issue: kotlin.Long? = null

)

