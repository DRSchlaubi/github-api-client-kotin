/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param state 
 * @param description 
 * @param domains Array of the domain set and its alternate name (if it is configured)
 * @param expiresAt 
 */
@Serializable

data class PagesHttpsCertificate (

    @SerialName(value = "state")
    val state: PagesHttpsCertificate.State,

    @SerialName(value = "description")
    val description: kotlin.String,

    /* Array of the domain set and its alternate name (if it is configured) */
    @SerialName(value = "domains")
    val domains: kotlin.collections.List<kotlin.String>,

    @Contextual @SerialName(value = "expires_at")
    val expiresAt: java.time.LocalDate? = null

) {

    /**
     * 
     *
     * Values: new,authorization_created,authorization_pending,authorized,authorization_revoked,issued,uploaded,approved,errored,bad_authz,destroy_pending,dns_changed
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "new") new("new"),
        @SerialName(value = "authorization_created") authorization_created("authorization_created"),
        @SerialName(value = "authorization_pending") authorization_pending("authorization_pending"),
        @SerialName(value = "authorized") authorized("authorized"),
        @SerialName(value = "authorization_revoked") authorization_revoked("authorization_revoked"),
        @SerialName(value = "issued") issued("issued"),
        @SerialName(value = "uploaded") uploaded("uploaded"),
        @SerialName(value = "approved") approved("approved"),
        @SerialName(value = "errored") errored("errored"),
        @SerialName(value = "bad_authz") bad_authz("bad_authz"),
        @SerialName(value = "destroy_pending") destroy_pending("destroy_pending"),
        @SerialName(value = "dns_changed") dns_changed("dns_changed");
    }
}

