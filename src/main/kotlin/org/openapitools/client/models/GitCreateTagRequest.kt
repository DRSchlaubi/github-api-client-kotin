/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.GitCreateTagRequestTagger

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param tag The tag's name. This is typically a version (e.g., \"v0.0.1\").
 * @param message The tag message.
 * @param `object` The SHA of the git object this is tagging.
 * @param type The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.
 * @param tagger 
 */
@Serializable

data class GitCreateTagRequest (

    /* The tag's name. This is typically a version (e.g., \"v0.0.1\"). */
    @SerialName(value = "tag")
    val tag: kotlin.String,

    /* The tag message. */
    @SerialName(value = "message")
    val message: kotlin.String,

    /* The SHA of the git object this is tagging. */
    @SerialName(value = "object")
    val `object`: kotlin.String,

    /* The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`. */
    @SerialName(value = "type")
    val type: GitCreateTagRequest.Type,

    @SerialName(value = "tagger")
    val tagger: GitCreateTagRequestTagger? = null

) {

    /**
     * The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.
     *
     * Values: commit,tree,blob
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "commit") commit("commit"),
        @SerialName(value = "tree") tree("tree"),
        @SerialName(value = "blob") blob("blob");
    }
}

