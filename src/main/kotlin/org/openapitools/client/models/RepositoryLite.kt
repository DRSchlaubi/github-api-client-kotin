/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.User

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param archiveUrl 
 * @param assigneesUrl 
 * @param blobsUrl 
 * @param branchesUrl 
 * @param collaboratorsUrl 
 * @param commentsUrl 
 * @param commitsUrl 
 * @param compareUrl 
 * @param contentsUrl 
 * @param contributorsUrl 
 * @param deploymentsUrl 
 * @param description 
 * @param downloadsUrl 
 * @param eventsUrl 
 * @param fork 
 * @param forksUrl 
 * @param fullName 
 * @param gitCommitsUrl 
 * @param gitRefsUrl 
 * @param gitTagsUrl 
 * @param hooksUrl 
 * @param htmlUrl 
 * @param id Unique identifier of the repository
 * @param issueCommentUrl 
 * @param issueEventsUrl 
 * @param issuesUrl 
 * @param keysUrl 
 * @param labelsUrl 
 * @param languagesUrl 
 * @param mergesUrl 
 * @param milestonesUrl 
 * @param name The name of the repository.
 * @param nodeId 
 * @param notificationsUrl 
 * @param owner 
 * @param `private` Whether the repository is private or public.
 * @param pullsUrl 
 * @param releasesUrl 
 * @param stargazersUrl 
 * @param statusesUrl 
 * @param subscribersUrl 
 * @param subscriptionUrl 
 * @param tagsUrl 
 * @param teamsUrl 
 * @param treesUrl 
 * @param url 
 */
@Serializable

data class RepositoryLite (

    @SerialName(value = "archive_url")
    val archiveUrl: kotlin.String,

    @SerialName(value = "assignees_url")
    val assigneesUrl: kotlin.String,

    @SerialName(value = "blobs_url")
    val blobsUrl: kotlin.String,

    @SerialName(value = "branches_url")
    val branchesUrl: kotlin.String,

    @SerialName(value = "collaborators_url")
    val collaboratorsUrl: kotlin.String,

    @SerialName(value = "comments_url")
    val commentsUrl: kotlin.String,

    @SerialName(value = "commits_url")
    val commitsUrl: kotlin.String,

    @SerialName(value = "compare_url")
    val compareUrl: kotlin.String,

    @SerialName(value = "contents_url")
    val contentsUrl: kotlin.String,

    @Contextual @SerialName(value = "contributors_url")
    val contributorsUrl: java.net.URI,

    @Contextual @SerialName(value = "deployments_url")
    val deploymentsUrl: java.net.URI,

    @SerialName(value = "description")
    val description: kotlin.String?,

    @Contextual @SerialName(value = "downloads_url")
    val downloadsUrl: java.net.URI,

    @Contextual @SerialName(value = "events_url")
    val eventsUrl: java.net.URI,

    @SerialName(value = "fork")
    val fork: kotlin.Boolean,

    @Contextual @SerialName(value = "forks_url")
    val forksUrl: java.net.URI,

    @SerialName(value = "full_name")
    val fullName: kotlin.String,

    @SerialName(value = "git_commits_url")
    val gitCommitsUrl: kotlin.String,

    @SerialName(value = "git_refs_url")
    val gitRefsUrl: kotlin.String,

    @SerialName(value = "git_tags_url")
    val gitTagsUrl: kotlin.String,

    @Contextual @SerialName(value = "hooks_url")
    val hooksUrl: java.net.URI,

    @Contextual @SerialName(value = "html_url")
    val htmlUrl: java.net.URI,

    /* Unique identifier of the repository */
    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "issue_comment_url")
    val issueCommentUrl: kotlin.String,

    @SerialName(value = "issue_events_url")
    val issueEventsUrl: kotlin.String,

    @SerialName(value = "issues_url")
    val issuesUrl: kotlin.String,

    @SerialName(value = "keys_url")
    val keysUrl: kotlin.String,

    @SerialName(value = "labels_url")
    val labelsUrl: kotlin.String,

    @Contextual @SerialName(value = "languages_url")
    val languagesUrl: java.net.URI,

    @Contextual @SerialName(value = "merges_url")
    val mergesUrl: java.net.URI,

    @SerialName(value = "milestones_url")
    val milestonesUrl: kotlin.String,

    /* The name of the repository. */
    @SerialName(value = "name")
    val name: kotlin.String,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    @SerialName(value = "notifications_url")
    val notificationsUrl: kotlin.String,

    @SerialName(value = "owner")
    val owner: User,

    /* Whether the repository is private or public. */
    @SerialName(value = "private")
    val `private`: kotlin.Boolean,

    @SerialName(value = "pulls_url")
    val pullsUrl: kotlin.String,

    @SerialName(value = "releases_url")
    val releasesUrl: kotlin.String,

    @Contextual @SerialName(value = "stargazers_url")
    val stargazersUrl: java.net.URI,

    @SerialName(value = "statuses_url")
    val statusesUrl: kotlin.String,

    @Contextual @SerialName(value = "subscribers_url")
    val subscribersUrl: java.net.URI,

    @Contextual @SerialName(value = "subscription_url")
    val subscriptionUrl: java.net.URI,

    @Contextual @SerialName(value = "tags_url")
    val tagsUrl: java.net.URI,

    @Contextual @SerialName(value = "teams_url")
    val teamsUrl: java.net.URI,

    @SerialName(value = "trees_url")
    val treesUrl: kotlin.String,

    @Contextual @SerialName(value = "url")
    val url: java.net.URI

)

