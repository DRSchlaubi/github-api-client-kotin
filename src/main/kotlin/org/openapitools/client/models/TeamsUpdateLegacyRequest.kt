/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param name The name of the team.
 * @param description The description of the team.
 * @param privacy The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:   **For a non-nested team:**    * `secret` - only visible to organization owners and members of this team.    * `closed` - visible to all members of this organization.   **For a parent or child team:**    * `closed` - visible to all members of this organization.
 * @param notificationSetting The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are:   * `notifications_enabled` - team members receive notifications when the team is @mentioned.    * `notifications_disabled` - no one receives notifications.
 * @param permission **Deprecated**. The permission that new repositories will be added to the team with when none is specified.
 * @param parentTeamId The ID of a team to set as the parent team.
 */
@Serializable

data class TeamsUpdateLegacyRequest (

    /* The name of the team. */
    @SerialName(value = "name")
    val name: kotlin.String,

    /* The description of the team. */
    @SerialName(value = "description")
    val description: kotlin.String? = null,

    /* The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:   **For a non-nested team:**    * `secret` - only visible to organization owners and members of this team.    * `closed` - visible to all members of this organization.   **For a parent or child team:**    * `closed` - visible to all members of this organization. */
    @SerialName(value = "privacy")
    val privacy: TeamsUpdateLegacyRequest.Privacy? = null,

    /* The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are:   * `notifications_enabled` - team members receive notifications when the team is @mentioned.    * `notifications_disabled` - no one receives notifications. */
    @SerialName(value = "notification_setting")
    val notificationSetting: TeamsUpdateLegacyRequest.NotificationSetting? = null,

    /* **Deprecated**. The permission that new repositories will be added to the team with when none is specified. */
    @SerialName(value = "permission")
    val permission: TeamsUpdateLegacyRequest.Permission? = Permission.pull,

    /* The ID of a team to set as the parent team. */
    @SerialName(value = "parent_team_id")
    val parentTeamId: kotlin.Int? = null

) {

    /**
     * The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:   **For a non-nested team:**    * `secret` - only visible to organization owners and members of this team.    * `closed` - visible to all members of this organization.   **For a parent or child team:**    * `closed` - visible to all members of this organization.
     *
     * Values: secret,closed
     */
    @Serializable
    enum class Privacy(val value: kotlin.String) {
        @SerialName(value = "secret") secret("secret"),
        @SerialName(value = "closed") closed("closed");
    }
    /**
     * The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are:   * `notifications_enabled` - team members receive notifications when the team is @mentioned.    * `notifications_disabled` - no one receives notifications.
     *
     * Values: enabled,disabled
     */
    @Serializable
    enum class NotificationSetting(val value: kotlin.String) {
        @SerialName(value = "notifications_enabled") enabled("notifications_enabled"),
        @SerialName(value = "notifications_disabled") disabled("notifications_disabled");
    }
    /**
     * **Deprecated**. The permission that new repositories will be added to the team with when none is specified.
     *
     * Values: pull,push,admin
     */
    @Serializable
    enum class Permission(val value: kotlin.String) {
        @SerialName(value = "pull") pull("pull"),
        @SerialName(value = "push") push("push"),
        @SerialName(value = "admin") admin("admin");
    }
}

