/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.Team1Parent
import org.openapitools.client.models.Team2
import org.openapitools.client.models.User

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param id Unique identifier of the team
 * @param login 
 * @param name Name of the team
 * @param avatarUrl 
 * @param deleted 
 * @param email 
 * @param eventsUrl 
 * @param followersUrl 
 * @param followingUrl 
 * @param gistsUrl 
 * @param gravatarId 
 * @param htmlUrl 
 * @param nodeId 
 * @param organizationsUrl 
 * @param receivedEventsUrl 
 * @param reposUrl 
 * @param siteAdmin 
 * @param starredUrl 
 * @param subscriptionsUrl 
 * @param type 
 * @param url URL for the team
 * @param description Description of the team
 * @param membersUrl 
 * @param parent 
 * @param permission Permission that the team will have for its repositories
 * @param privacy 
 * @param repositoriesUrl 
 * @param slug 
 */
@Serializable

data class PullRequest3RequestedReviewersInner (

    /* Unique identifier of the team */
    @Contextual @SerialName(value = "id")
    val id: kotlin.Any?,

    @Contextual @SerialName(value = "login")
    val login: kotlin.Any?,

    /* Name of the team */
    @Contextual @SerialName(value = "name")
    val name: kotlin.Any?,

    @Contextual @SerialName(value = "avatar_url")
    val avatarUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "deleted")
    val deleted: kotlin.Any? = null,

    @Contextual @SerialName(value = "email")
    val email: kotlin.Any? = null,

    @Contextual @SerialName(value = "events_url")
    val eventsUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "followers_url")
    val followersUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "following_url")
    val followingUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "gists_url")
    val gistsUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "gravatar_id")
    val gravatarId: kotlin.Any? = null,

    @Contextual @SerialName(value = "html_url")
    val htmlUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "node_id")
    val nodeId: kotlin.Any? = null,

    @Contextual @SerialName(value = "organizations_url")
    val organizationsUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "received_events_url")
    val receivedEventsUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "repos_url")
    val reposUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "site_admin")
    val siteAdmin: kotlin.Any? = null,

    @Contextual @SerialName(value = "starred_url")
    val starredUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "subscriptions_url")
    val subscriptionsUrl: kotlin.Any? = null,

    @SerialName(value = "type")
    val type: PullRequest3RequestedReviewersInner.Type? = null,

    /* URL for the team */
    @Contextual @SerialName(value = "url")
    val url: kotlin.Any? = null,

    /* Description of the team */
    @Contextual @SerialName(value = "description")
    val description: kotlin.Any? = null,

    @Contextual @SerialName(value = "members_url")
    val membersUrl: kotlin.Any? = null,

    @SerialName(value = "parent")
    val parent: Team1Parent? = null,

    /* Permission that the team will have for its repositories */
    @Contextual @SerialName(value = "permission")
    val permission: kotlin.Any? = null,

    @SerialName(value = "privacy")
    val privacy: PullRequest3RequestedReviewersInner.Privacy? = null,

    @Contextual @SerialName(value = "repositories_url")
    val repositoriesUrl: kotlin.Any? = null,

    @Contextual @SerialName(value = "slug")
    val slug: kotlin.Any? = null

) {

    /**
     * 
     *
     * Values: Bot,User,Organization
     */
    @Serializable
    enum class Type(val value: kotlin.Any) {
        @SerialName(value = "Bot") Bot("Bot"),
        @SerialName(value = "User") User("User"),
        @SerialName(value = "Organization") Organization("Organization");
    }
    /**
     * 
     *
     * Values: `open`,closed,secret
     */
    @Serializable
    enum class Privacy(val value: kotlin.Any) {
        @SerialName(value = "open") `open`("open"),
        @SerialName(value = "closed") closed("closed"),
        @SerialName(value = "secret") secret("secret");
    }
}

