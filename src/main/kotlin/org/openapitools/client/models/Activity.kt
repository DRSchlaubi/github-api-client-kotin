/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.IntegrationOwner

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Activity
 *
 * @param id 
 * @param nodeId 
 * @param before The SHA of the commit before the activity.
 * @param after The SHA of the commit after the activity.
 * @param ref The full Git reference, formatted as `refs/heads/<branch name>`.
 * @param timestamp The time when the activity occurred.
 * @param activityType The type of the activity that was performed.
 * @param actor 
 */
@Serializable

data class Activity (

    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    /* The SHA of the commit before the activity. */
    @SerialName(value = "before")
    val before: kotlin.String,

    /* The SHA of the commit after the activity. */
    @SerialName(value = "after")
    val after: kotlin.String,

    /* The full Git reference, formatted as `refs/heads/<branch name>`. */
    @SerialName(value = "ref")
    val ref: kotlin.String,

    /* The time when the activity occurred. */
    @Contextual @SerialName(value = "timestamp")
    val timestamp: kotlinx.datetime.Instant,

    /* The type of the activity that was performed. */
    @SerialName(value = "activity_type")
    val activityType: Activity.ActivityType,

    @SerialName(value = "actor")
    val actor: IntegrationOwner

) {

    /**
     * The type of the activity that was performed.
     *
     * Values: push,force_push,branch_deletion,branch_creation,pr_merge,merge_queue_merge
     */
    @Serializable
    enum class ActivityType(val value: kotlin.String) {
        @SerialName(value = "push") push("push"),
        @SerialName(value = "force_push") force_push("force_push"),
        @SerialName(value = "branch_deletion") branch_deletion("branch_deletion"),
        @SerialName(value = "branch_creation") branch_creation("branch_creation"),
        @SerialName(value = "pr_merge") pr_merge("pr_merge"),
        @SerialName(value = "merge_queue_merge") merge_queue_merge("merge_queue_merge");
    }
}

