/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.SimpleClassroom

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * A GitHub Classroom assignment
 *
 * @param id Unique identifier of the repository.
 * @param publicRepo Whether an accepted assignment creates a public repository.
 * @param title Assignment title.
 * @param type Whether it's a Group Assignment or Individual Assignment.
 * @param inviteLink The link that a student can use to accept the assignment.
 * @param invitationsEnabled Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
 * @param slug Sluggified name of the assignment.
 * @param studentsAreRepoAdmins Whether students are admins on created repository on accepted assignment.
 * @param feedbackPullRequestsEnabled Whether feedback pull request will be created on assignment acceptance.
 * @param editor The selected editor for the assignment.
 * @param accepted The number of students that have accepted the assignment.
 * @param submitted The number of students that have submitted the assignment.
 * @param passing The number of students that have passed the assignment.
 * @param language The programming language used in the assignment.
 * @param deadline The time at which the assignment is due.
 * @param classroom 
 * @param maxTeams The maximum allowable teams for the assignment.
 * @param maxMembers The maximum allowable members per team.
 */
@Serializable

data class SimpleClassroomAssignment (

    /* Unique identifier of the repository. */
    @SerialName(value = "id")
    val id: kotlin.Int,

    /* Whether an accepted assignment creates a public repository. */
    @SerialName(value = "public_repo")
    val publicRepo: kotlin.Boolean,

    /* Assignment title. */
    @SerialName(value = "title")
    val title: kotlin.String,

    /* Whether it's a Group Assignment or Individual Assignment. */
    @SerialName(value = "type")
    val type: SimpleClassroomAssignment.Type,

    /* The link that a student can use to accept the assignment. */
    @SerialName(value = "invite_link")
    val inviteLink: kotlin.String,

    /* Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment. */
    @SerialName(value = "invitations_enabled")
    val invitationsEnabled: kotlin.Boolean,

    /* Sluggified name of the assignment. */
    @SerialName(value = "slug")
    val slug: kotlin.String,

    /* Whether students are admins on created repository on accepted assignment. */
    @SerialName(value = "students_are_repo_admins")
    val studentsAreRepoAdmins: kotlin.Boolean,

    /* Whether feedback pull request will be created on assignment acceptance. */
    @SerialName(value = "feedback_pull_requests_enabled")
    val feedbackPullRequestsEnabled: kotlin.Boolean,

    /* The selected editor for the assignment. */
    @SerialName(value = "editor")
    val editor: kotlin.String,

    /* The number of students that have accepted the assignment. */
    @SerialName(value = "accepted")
    val accepted: kotlin.Int,

    /* The number of students that have submitted the assignment. */
    @SerialName(value = "submitted")
    val submitted: kotlin.Int,

    /* The number of students that have passed the assignment. */
    @SerialName(value = "passing")
    val passing: kotlin.Int,

    /* The programming language used in the assignment. */
    @SerialName(value = "language")
    val language: kotlin.String,

    /* The time at which the assignment is due. */
    @Contextual @SerialName(value = "deadline")
    val deadline: kotlinx.datetime.Instant?,

    @SerialName(value = "classroom")
    val classroom: SimpleClassroom,

    /* The maximum allowable teams for the assignment. */
    @SerialName(value = "max_teams")
    val maxTeams: kotlin.Int? = null,

    /* The maximum allowable members per team. */
    @SerialName(value = "max_members")
    val maxMembers: kotlin.Int? = null

) {

    /**
     * Whether it's a Group Assignment or Individual Assignment.
     *
     * Values: individual,group
     */
    @Serializable
    enum class Type(val value: kotlin.String) {
        @SerialName(value = "individual") individual("individual"),
        @SerialName(value = "group") group("group");
    }
}

