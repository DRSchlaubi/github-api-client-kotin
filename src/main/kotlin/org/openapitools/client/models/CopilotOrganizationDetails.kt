/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CopilotSeatBreakdown

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Information about the seat breakdown and policies set for an organization with a Copilot Business subscription.
 *
 * @param seatBreakdown 
 * @param publicCodeSuggestions The organization policy for allowing or disallowing Copilot to make suggestions that match public code.
 * @param seatManagementSetting The mode of assigning new seats.
 * @param ideChat The organization policy for allowing or disallowing organization members to use Copilot Chat within their editor.
 * @param platformChat The organization policy for allowing or disallowing organization members to use Copilot features within github.com.
 * @param cli The organization policy for allowing or disallowing organization members to use Copilot within their CLI.
 */
@Serializable

data class CopilotOrganizationDetails (

    @SerialName(value = "seat_breakdown")
    val seatBreakdown: CopilotSeatBreakdown,

    /* The organization policy for allowing or disallowing Copilot to make suggestions that match public code. */
    @SerialName(value = "public_code_suggestions")
    val publicCodeSuggestions: CopilotOrganizationDetails.PublicCodeSuggestions,

    /* The mode of assigning new seats. */
    @SerialName(value = "seat_management_setting")
    val seatManagementSetting: CopilotOrganizationDetails.SeatManagementSetting,

    /* The organization policy for allowing or disallowing organization members to use Copilot Chat within their editor. */
    @SerialName(value = "ide_chat")
    val ideChat: CopilotOrganizationDetails.IdeChat? = null,

    /* The organization policy for allowing or disallowing organization members to use Copilot features within github.com. */
    @SerialName(value = "platform_chat")
    val platformChat: CopilotOrganizationDetails.PlatformChat? = null,

    /* The organization policy for allowing or disallowing organization members to use Copilot within their CLI. */
    @SerialName(value = "cli")
    val cli: CopilotOrganizationDetails.Cli? = null

) {

    /**
     * The organization policy for allowing or disallowing Copilot to make suggestions that match public code.
     *
     * Values: allow,block,unconfigured,unknown
     */
    @Serializable
    enum class PublicCodeSuggestions(val value: kotlin.String) {
        @SerialName(value = "allow") allow("allow"),
        @SerialName(value = "block") block("block"),
        @SerialName(value = "unconfigured") unconfigured("unconfigured"),
        @SerialName(value = "unknown") unknown("unknown");
    }
    /**
     * The mode of assigning new seats.
     *
     * Values: assign_all,assign_selected,disabled,unconfigured
     */
    @Serializable
    enum class SeatManagementSetting(val value: kotlin.String) {
        @SerialName(value = "assign_all") assign_all("assign_all"),
        @SerialName(value = "assign_selected") assign_selected("assign_selected"),
        @SerialName(value = "disabled") disabled("disabled"),
        @SerialName(value = "unconfigured") unconfigured("unconfigured");
    }
    /**
     * The organization policy for allowing or disallowing organization members to use Copilot Chat within their editor.
     *
     * Values: enabled,disabled,unconfigured
     */
    @Serializable
    enum class IdeChat(val value: kotlin.String) {
        @SerialName(value = "enabled") enabled("enabled"),
        @SerialName(value = "disabled") disabled("disabled"),
        @SerialName(value = "unconfigured") unconfigured("unconfigured");
    }
    /**
     * The organization policy for allowing or disallowing organization members to use Copilot features within github.com.
     *
     * Values: enabled,disabled,unconfigured
     */
    @Serializable
    enum class PlatformChat(val value: kotlin.String) {
        @SerialName(value = "enabled") enabled("enabled"),
        @SerialName(value = "disabled") disabled("disabled"),
        @SerialName(value = "unconfigured") unconfigured("unconfigured");
    }
    /**
     * The organization policy for allowing or disallowing organization members to use Copilot within their CLI.
     *
     * Values: enabled,disabled,unconfigured
     */
    @Serializable
    enum class Cli(val value: kotlin.String) {
        @SerialName(value = "enabled") enabled("enabled"),
        @SerialName(value = "disabled") disabled("disabled"),
        @SerialName(value = "unconfigured") unconfigured("unconfigured");
    }
}

