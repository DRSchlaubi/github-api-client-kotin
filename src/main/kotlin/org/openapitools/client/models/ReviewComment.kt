/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AuthorAssociation
import org.openapitools.client.models.IntegrationOwner
import org.openapitools.client.models.ReactionRollup
import org.openapitools.client.models.ReviewCommentLinks

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Legacy Review Comment
 *
 * @param url 
 * @param pullRequestReviewId 
 * @param id 
 * @param nodeId 
 * @param diffHunk 
 * @param path 
 * @param position 
 * @param originalPosition 
 * @param commitId 
 * @param originalCommitId 
 * @param user 
 * @param body 
 * @param createdAt 
 * @param updatedAt 
 * @param htmlUrl 
 * @param pullRequestUrl 
 * @param authorAssociation 
 * @param links 
 * @param inReplyToId 
 * @param bodyText 
 * @param bodyHtml 
 * @param reactions 
 * @param side The side of the first line of the range for a multi-line comment.
 * @param startSide The side of the first line of the range for a multi-line comment.
 * @param line The line of the blob to which the comment applies. The last line of the range for a multi-line comment
 * @param originalLine The original line of the blob to which the comment applies. The last line of the range for a multi-line comment
 * @param startLine The first line of the range for a multi-line comment.
 * @param originalStartLine The original first line of the range for a multi-line comment.
 */
@Serializable

data class ReviewComment (

    @Contextual @SerialName(value = "url")
    val url: java.net.URI,

    @SerialName(value = "pull_request_review_id")
    val pullRequestReviewId: kotlin.Int?,

    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    @SerialName(value = "diff_hunk")
    val diffHunk: kotlin.String,

    @SerialName(value = "path")
    val path: kotlin.String,

    @SerialName(value = "position")
    val position: kotlin.Int?,

    @SerialName(value = "original_position")
    val originalPosition: kotlin.Int,

    @SerialName(value = "commit_id")
    val commitId: kotlin.String,

    @SerialName(value = "original_commit_id")
    val originalCommitId: kotlin.String,

    @SerialName(value = "user")
    val user: IntegrationOwner,

    @SerialName(value = "body")
    val body: kotlin.String,

    @Contextual @SerialName(value = "created_at")
    val createdAt: kotlinx.datetime.Instant,

    @Contextual @SerialName(value = "updated_at")
    val updatedAt: kotlinx.datetime.Instant,

    @Contextual @SerialName(value = "html_url")
    val htmlUrl: java.net.URI,

    @Contextual @SerialName(value = "pull_request_url")
    val pullRequestUrl: java.net.URI,

    @Contextual @SerialName(value = "author_association")
    val authorAssociation: AuthorAssociation,

    @SerialName(value = "_links")
    val links: ReviewCommentLinks,

    @SerialName(value = "in_reply_to_id")
    val inReplyToId: kotlin.Int? = null,

    @SerialName(value = "body_text")
    val bodyText: kotlin.String? = null,

    @SerialName(value = "body_html")
    val bodyHtml: kotlin.String? = null,

    @SerialName(value = "reactions")
    val reactions: ReactionRollup? = null,

    /* The side of the first line of the range for a multi-line comment. */
    @SerialName(value = "side")
    val side: ReviewComment.Side? = Side.RIGHT,

    /* The side of the first line of the range for a multi-line comment. */
    @SerialName(value = "start_side")
    val startSide: ReviewComment.StartSide? = StartSide.RIGHT,

    /* The line of the blob to which the comment applies. The last line of the range for a multi-line comment */
    @SerialName(value = "line")
    val line: kotlin.Int? = null,

    /* The original line of the blob to which the comment applies. The last line of the range for a multi-line comment */
    @SerialName(value = "original_line")
    val originalLine: kotlin.Int? = null,

    /* The first line of the range for a multi-line comment. */
    @SerialName(value = "start_line")
    val startLine: kotlin.Int? = null,

    /* The original first line of the range for a multi-line comment. */
    @SerialName(value = "original_start_line")
    val originalStartLine: kotlin.Int? = null

) {

    /**
     * The side of the first line of the range for a multi-line comment.
     *
     * Values: LEFT,RIGHT
     */
    @Serializable
    enum class Side(val value: kotlin.String) {
        @SerialName(value = "LEFT") LEFT("LEFT"),
        @SerialName(value = "RIGHT") RIGHT("RIGHT");
    }
    /**
     * The side of the first line of the range for a multi-line comment.
     *
     * Values: LEFT,RIGHT,`null`
     */
    @Serializable
    enum class StartSide(val value: kotlin.String) {
        @SerialName(value = "LEFT") LEFT("LEFT"),
        @SerialName(value = "RIGHT") RIGHT("RIGHT"),
        @SerialName(value = "null") `null`("null");
    }
}

