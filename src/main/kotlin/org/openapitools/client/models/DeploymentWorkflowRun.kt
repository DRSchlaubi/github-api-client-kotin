/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CheckRunPullRequest
import org.openapitools.client.models.DeploymentWorkflowRunHeadRepository
import org.openapitools.client.models.DeploymentWorkflowRunReferencedWorkflowsInner
import org.openapitools.client.models.User

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param actor 
 * @param checkSuiteId 
 * @param checkSuiteNodeId 
 * @param conclusion 
 * @param createdAt 
 * @param displayTitle 
 * @param event 
 * @param headBranch 
 * @param headSha 
 * @param htmlUrl 
 * @param id 
 * @param name 
 * @param nodeId 
 * @param path 
 * @param pullRequests 
 * @param runAttempt 
 * @param runNumber 
 * @param runStartedAt 
 * @param status 
 * @param updatedAt 
 * @param url 
 * @param workflowId 
 * @param artifactsUrl 
 * @param cancelUrl 
 * @param checkSuiteUrl 
 * @param headCommit 
 * @param headRepository 
 * @param jobsUrl 
 * @param logsUrl 
 * @param previousAttemptUrl 
 * @param referencedWorkflows 
 * @param repository 
 * @param rerunUrl 
 * @param triggeringActor 
 * @param workflowUrl 
 */
@Serializable

data class DeploymentWorkflowRun (

    @SerialName(value = "actor")
    val actor: User,

    @SerialName(value = "check_suite_id")
    val checkSuiteId: kotlin.Int,

    @SerialName(value = "check_suite_node_id")
    val checkSuiteNodeId: kotlin.String,

    @SerialName(value = "conclusion")
    val conclusion: DeploymentWorkflowRun.Conclusion?,

    @Contextual @SerialName(value = "created_at")
    val createdAt: kotlinx.datetime.Instant,

    @SerialName(value = "display_title")
    val displayTitle: kotlin.String,

    @SerialName(value = "event")
    val event: kotlin.String,

    @SerialName(value = "head_branch")
    val headBranch: kotlin.String,

    @SerialName(value = "head_sha")
    val headSha: kotlin.String,

    @Contextual @SerialName(value = "html_url")
    val htmlUrl: java.net.URI,

    @SerialName(value = "id")
    val id: kotlin.Int,

    @SerialName(value = "name")
    val name: kotlin.String,

    @SerialName(value = "node_id")
    val nodeId: kotlin.String,

    @SerialName(value = "path")
    val path: kotlin.String,

    @SerialName(value = "pull_requests")
    val pullRequests: kotlin.collections.List<CheckRunPullRequest>,

    @SerialName(value = "run_attempt")
    val runAttempt: kotlin.Int,

    @SerialName(value = "run_number")
    val runNumber: kotlin.Int,

    @Contextual @SerialName(value = "run_started_at")
    val runStartedAt: kotlinx.datetime.Instant,

    @SerialName(value = "status")
    val status: DeploymentWorkflowRun.Status,

    @Contextual @SerialName(value = "updated_at")
    val updatedAt: kotlinx.datetime.Instant,

    @Contextual @SerialName(value = "url")
    val url: java.net.URI,

    @SerialName(value = "workflow_id")
    val workflowId: kotlin.Int,

    @SerialName(value = "artifacts_url")
    val artifactsUrl: kotlin.String? = null,

    @SerialName(value = "cancel_url")
    val cancelUrl: kotlin.String? = null,

    @SerialName(value = "check_suite_url")
    val checkSuiteUrl: kotlin.String? = null,

    @Contextual @SerialName(value = "head_commit")
    val headCommit: kotlin.Any? = null,

    @SerialName(value = "head_repository")
    val headRepository: DeploymentWorkflowRunHeadRepository? = null,

    @SerialName(value = "jobs_url")
    val jobsUrl: kotlin.String? = null,

    @SerialName(value = "logs_url")
    val logsUrl: kotlin.String? = null,

    @Contextual @SerialName(value = "previous_attempt_url")
    val previousAttemptUrl: kotlin.Any? = null,

    @SerialName(value = "referenced_workflows")
    val referencedWorkflows: kotlin.collections.List<DeploymentWorkflowRunReferencedWorkflowsInner>? = null,

    @SerialName(value = "repository")
    val repository: DeploymentWorkflowRunHeadRepository? = null,

    @SerialName(value = "rerun_url")
    val rerunUrl: kotlin.String? = null,

    @SerialName(value = "triggering_actor")
    val triggeringActor: User? = null,

    @SerialName(value = "workflow_url")
    val workflowUrl: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: success,failure,neutral,cancelled,timed_out,action_required,stale,`null`
     */
    @Serializable
    enum class Conclusion(val value: kotlin.String) {
        @SerialName(value = "success") success("success"),
        @SerialName(value = "failure") failure("failure"),
        @SerialName(value = "neutral") neutral("neutral"),
        @SerialName(value = "cancelled") cancelled("cancelled"),
        @SerialName(value = "timed_out") timed_out("timed_out"),
        @SerialName(value = "action_required") action_required("action_required"),
        @SerialName(value = "stale") stale("stale"),
        @SerialName(value = "null") `null`("null");
    }
    /**
     * 
     *
     * Values: requested,in_progress,completed,queued,waiting,pending
     */
    @Serializable
    enum class Status(val value: kotlin.String) {
        @SerialName(value = "requested") requested("requested"),
        @SerialName(value = "in_progress") in_progress("in_progress"),
        @SerialName(value = "completed") completed("completed"),
        @SerialName(value = "queued") queued("queued"),
        @SerialName(value = "waiting") waiting("waiting"),
        @SerialName(value = "pending") pending("pending");
    }
}

