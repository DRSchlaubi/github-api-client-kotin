/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param payload 
 * @param reason 
 * @param signature 
 * @param verified 
 */
@Serializable

data class WebhookStatusCommitCommitVerification (

    @SerialName(value = "payload")
    val payload: kotlin.String?,

    @SerialName(value = "reason")
    val reason: WebhookStatusCommitCommitVerification.Reason,

    @SerialName(value = "signature")
    val signature: kotlin.String?,

    @SerialName(value = "verified")
    val verified: kotlin.Boolean

) {

    /**
     * 
     *
     * Values: expired_key,not_signing_key,gpgverify_error,gpgverify_unavailable,unsigned,unknown_signature_type,no_user,unverified_email,bad_email,unknown_key,malformed_signature,invalid,valid,bad_cert,ocsp_pending
     */
    @Serializable
    enum class Reason(val value: kotlin.String) {
        @SerialName(value = "expired_key") expired_key("expired_key"),
        @SerialName(value = "not_signing_key") not_signing_key("not_signing_key"),
        @SerialName(value = "gpgverify_error") gpgverify_error("gpgverify_error"),
        @SerialName(value = "gpgverify_unavailable") gpgverify_unavailable("gpgverify_unavailable"),
        @SerialName(value = "unsigned") unsigned("unsigned"),
        @SerialName(value = "unknown_signature_type") unknown_signature_type("unknown_signature_type"),
        @SerialName(value = "no_user") no_user("no_user"),
        @SerialName(value = "unverified_email") unverified_email("unverified_email"),
        @SerialName(value = "bad_email") bad_email("bad_email"),
        @SerialName(value = "unknown_key") unknown_key("unknown_key"),
        @SerialName(value = "malformed_signature") malformed_signature("malformed_signature"),
        @SerialName(value = "invalid") invalid("invalid"),
        @SerialName(value = "valid") valid("valid"),
        @SerialName(value = "bad_cert") bad_cert("bad_cert"),
        @SerialName(value = "ocsp_pending") ocsp_pending("ocsp_pending");
    }
}

